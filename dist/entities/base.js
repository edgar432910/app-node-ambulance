"use strict";var __decorate=this&&this.__decorate||function(e,t,a,d){var o,r=arguments.length,p=r<3?t:null===d?d=Object.getOwnPropertyDescriptor(t,a):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(e,t,a,d);else for(var _=e.length-1;_>=0;_--)(o=e[_])&&(p=(r<3?o(p):r>3?o(t,a,p):o(t,a))||p);return r>3&&p&&Object.defineProperty(t,a,p),p},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0});const typeorm_1=require("typeorm");class Base{addDateCreated(){this.dateCreated=new Date,this.dateUpdated=new Date}addDateUpdate(){this.dateUpdated=new Date}}__decorate([(0,typeorm_1.Column)({type:"datetime"}),__metadata("design:type",Date)],Base.prototype,"dateCreated",void 0),__decorate([(0,typeorm_1.Column)({type:"datetime"}),__metadata("design:type",Date)],Base.prototype,"dateUpdated",void 0),__decorate([(0,typeorm_1.Column)({type:"boolean",default:!0}),__metadata("design:type",Boolean)],Base.prototype,"active",void 0),__decorate([(0,typeorm_1.BeforeInsert)(),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",void 0)],Base.prototype,"addDateCreated",null),__decorate([(0,typeorm_1.BeforeUpdate)(),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",void 0)],Base.prototype,"addDateUpdate",null),exports.default=Base;