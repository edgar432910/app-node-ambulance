"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AuthUseCase=void 0;const user_service_1=require("../../user/application/user.service"),response_dto_1=require("../../shared/application/response.dto"),family_refresh_tokens_entity_1=require("../../entities/family-refresh-tokens.entity");class AuthUseCase{constructor(e,s){this.repository=e,this.repositoryFamilyRefreshTokens=s}async login(e){const s=(await this.repository.getOne({email:e.email},["roles","familyRefreshTokens"])).payload.data;if(!s)return null;if(!await user_service_1.UserService.decryptPassword(e.password,s.password))return null;const r=user_service_1.UserService.generateRefreshToken();console.log({userMatched:s});(new family_refresh_tokens_entity_1.FamilyRefreshTokens).refreshToken=r;const t={refreshToken:r,user:s},o={status:!1},i=s.familyRefreshTokens.map((e=>Object.assign(e,o)));s.familyRefreshTokens=i,s.familyRefreshTokens.push(t),await this.repository.update(s,{id:s.id},[]);const a={accessToken:user_service_1.UserService.generateAccessToken(s),refreshToken:r};return response_dto_1.ResponseDto.format("",a)}async getNewAccessToken(e){const s=(await this.repositoryFamilyRefreshTokens.getOne({refreshToken:e,status:!0},["user"])).payload.data;if(!s)return null;await this.repositoryFamilyRefreshTokens.update({status:!1},{user:s.user.id},[]);const r=await this.repository.getOne({id:s.user.id},["familyRefreshTokens"]),t=user_service_1.UserService.generateRefreshToken();(new family_refresh_tokens_entity_1.FamilyRefreshTokens).refreshToken=t;const o={refreshToken:t,user:s.user},i=r.payload.data;i.familyRefreshTokens.push(o),await this.repository.update(i,{id:i.id},[]);const a={accessToken:user_service_1.UserService.generateAccessToken(s.user),refreshToken:t};return response_dto_1.ResponseDto.format("",a)}}exports.AuthUseCase=AuthUseCase;