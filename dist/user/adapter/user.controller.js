"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const functionReject=()=>new Promise(((s,e)=>{const a=new Error("Error de promesa");a.status=502,e(a)}));class UserController{constructor(s){this.useCase=s}async list(s,e){const a=await this.useCase.list({},[],{lastname:"ASC",name:"ASC"});e.json(a)}async getOne(s,e){const a={id:+s.params.id},t=await this.useCase.getOne(a);e.json(t)}async getPhoto(s,e){const a={id:+s.params.id},t=await this.useCase.getPhoto(a),o=Buffer.from(t.Body).toString("utf-8");e.type("image/png").send(o)}async getPage(s,e){const a=+s.params.page,t=await this.useCase.getPage(a,{},[],{lastname:"ASC",name:"ASC"});e.json(t)}async insert(s,e){console.log("Inserting");const a=s.body,t={name:a.name,lastname:a.lastname,email:a.email,password:a.password,roles:a.roles,photo:a.photo},o=await this.useCase.insert(t);e.json(o)}async update(s,e){const a=s.body,t={id:+s.params.id},o=await this.useCase.update(a,t);e.json(o)}async delete(s,e){const a={id:+s.params.id},t=await this.useCase.delete(a);e.json(t)}}exports.default=UserController;