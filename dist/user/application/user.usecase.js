"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const base_usecase_1=require("../../shared/application/base.usecase"),user_service_1=require("./user.service"),family_refresh_tokens_entity_1=require("../../entities/family-refresh-tokens.entity"),user_list_dto_1=require("../domain/user-list.dto"),aws_sdk_1=__importDefault(require("aws-sdk")),yenv_1=__importDefault(require("yenv")),S3=new aws_sdk_1.default.S3,env=(0,yenv_1.default)();class UserUseCase extends base_usecase_1.BaseUseCase{constructor(e,s){super(e),this.repository=e,this.repositoryRole=s}async insert(e){const s={...e},t=[];s.roles.forEach((e=>{t.push(this.repositoryRole.getOne({id:+e},[]))}));const r=await Promise.all(t);s.roles=r.map((e=>e.payload.data));const a=user_service_1.UserService.generateRefreshToken();(new family_refresh_tokens_entity_1.FamilyRefreshTokens).refreshToken=a;const i={refreshToken:a};s.familyRefreshTokens=[i],s.password=await user_service_1.UserService.cryptPassword(s.password);return await this.repository.insert(s)}async list(e={},s=[],t={}){e={...e,active:!0};const r=await this.repository.list(e,s,t);return user_list_dto_1.UserListDto.mapping(r)}async getPhoto(e={}){const s=(await this.repository.getOne(e,[])).payload.data,t={Bucket:env.S3.bucketName,Key:s.photo};return await S3.getObject(t).promise()}}exports.default=UserUseCase;